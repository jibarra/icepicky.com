<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Jose Ibarra</title><link>//www.icepicky.com/projects/</link><description>Recent content in Projects on Jose Ibarra</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Thu, 02 Mar 2017 14:04:10 -0700</lastBuildDate><atom:link href="//www.icepicky.com/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>AR Resource Finder</title><link>//www.icepicky.com/projects/ar-resource-finder/</link><pubDate>Thu, 02 Mar 2017 14:04:10 -0700</pubDate><guid>//www.icepicky.com/projects/ar-resource-finder/</guid><description>&lt;p>This application was created for the 2017 General Motors (GM) Arizona Hackathon. It integrated with existing GM services to locate resources (people, rooms, printers, bathrooms) in an augmented reality (AR) Android application.&lt;/p>
&lt;p>The application utilizes a custom AR framework to display the resources on the screen. The application utilized multiple Android services like the location, compass, gyroscope, accelerometer &amp;amp; camera to position AR objects on the screen. A resource&amp;rsquo;s location was determined by comparing the user&amp;rsquo;s current location, height &amp;amp; compass position and the target resource&amp;rsquo;s location &amp;amp; height; the framework also weighted AR object size by distance from the user. On the backend, the application connected to a Node.js server to get general resource data like its positioning, availability, and status. Additionally, we developed a custom sensor with an Arduino to sense the availability of a bathroom stall and communicate the availability back to the server.&lt;/p></description></item><item><title>Legato - Autonomous Vehicle Manager</title><link>//www.icepicky.com/projects/legato/</link><pubDate>Fri, 25 Nov 2016 13:18:54 -0700</pubDate><guid>//www.icepicky.com/projects/legato/</guid><description>&lt;p>This application was created for the 2016 General Motors National Hackathon Championships. It integrates the user&amp;rsquo;s life with autonomous vehicle services.&lt;/p>
&lt;p>The application utilizes calendars provided by the user to schedule events for your autonomous car to use. The application can automatically suggest events by querying the OnStar API for things like oil levels. Calendar events and destinations display on the Android app so the user is aware of their car&amp;rsquo;s location. In addition, the application supports notifications for car pickup/dropoff events and Lyft money earning events. The backend is a Node.js server and the front end is an Android application.&lt;/p></description></item><item><title>Travalet - OnStar Integrated Car Scheduler</title><link>//www.icepicky.com/projects/travalet/</link><pubDate>Tue, 13 Sep 2016 13:47:38 -0700</pubDate><guid>//www.icepicky.com/projects/travalet/</guid><description>&lt;p>This application was created for the 2016 General Motors Arizona Hackathon. It integrates the user&amp;rsquo;s email events with existing OnStar services.&lt;/p>
&lt;p>The applciation utilizes Google&amp;rsquo;s Gmail API to find events in the future and automatically schedule oil changes, tire pressure stops and gas station stops. The application utilized different stop and end times for events, such as waking up the user, starting the car and the car leaving for the final destination. The application also automatically sends mapping data to the car before events and sets alarms to wake up the user. The backend is a Java server and the front end is an Android application.&lt;/p></description></item><item><title>INSPIR3.com - Development &amp; Design</title><link>//www.icepicky.com/projects/inspir3/</link><pubDate>Sun, 28 Aug 2016 13:47:27 -0700</pubDate><guid>//www.icepicky.com/projects/inspir3/</guid><description>&lt;p>This website was created for &lt;a href="https://www.inspir3.com" target="_blank" rel="noopener">INSPIR3 - Mental Wellness Center&lt;/a> in the summer of 2016. The website is a basic static website that describes the vision and goals of INSPIR3 and promotes their capital campaign.&lt;/p>
&lt;p>The website utilizes the &lt;a href="https://foundation.zurb.com" target="_blank" rel="noopener">Foundation framework from ZURB&lt;/a> for the design of the website. &lt;a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js&lt;/a> is the HTTP server for the website and the blogging platform used for the website. The HTTP server utilized Express.js and the Pug view engine to serve dynamic webpages. Pug allowed easy changes for duplicated content such as the navbar and footer.&lt;/p></description></item><item><title>Surname Search - Surname Population Density &amp; Income Distribution</title><link>//www.icepicky.com/projects/surname-search/</link><pubDate>Fri, 18 Apr 2014 13:47:54 -0700</pubDate><guid>//www.icepicky.com/projects/surname-search/</guid><description>&lt;p>This application was developed for my undergraduate honors thesis and was accepted and published at EuroVA 2014. The work was supported partially from an award from U.S. Department of Homeland Securityâ€™s VACCINE Center and a grant from the Engineering and Physical Sciences Research Council UK EPSRC. It received surname input from the user and output a population density map and income distribution for that surname.&lt;/p>
&lt;p>The application combined Java web services and MySQL on the backend and HTML, Javascript, &lt;a href="https://d3js.org" target="_blank" rel="noopener">d3.js&lt;/a> , &lt;a href="http://jquery.com" target="_blank" rel="noopener">jQuery&lt;/a> , and the &lt;a href="https://developers.google.com/maps/web/" target="_blank" rel="noopener">Google Maps API&lt;/a> on the frontend. The application also utilized Java to precompute surname population densities and income distribution. The precomputation for the surname data utilized a phonebook database to link surnames to latitudes and longitudes. Each surname within the database estimated the density utilizing a &lt;a href="https://en.wikipedia.org/wiki/Kernel_density_estimation" target="_blank" rel="noopener">kernel density estimation&lt;/a> function. With the surnames precomputed, when a user entered a surname, the web service simply looked up the precomputed data and returned it to the frontend. The frontend displayed the population density heatmap on top of a Google map of the United States and utilized &lt;a href="https://d3js.org" target="_blank" rel="noopener">D3.js&lt;/a> to display the income distribution and a similar names word cloud.&lt;/p></description></item><item><title>Linked Animal-Human Health Visual Analytics (LAHVA) Expansion</title><link>//www.icepicky.com/projects/lahva/</link><pubDate>Fri, 26 Apr 2013 13:48:06 -0700</pubDate><guid>//www.icepicky.com/projects/lahva/</guid><description>&lt;p>This application was developed for the Spring 2013 &lt;a href="https://furi.engineering.asu.edu" target="_blank" rel="noopener">Fulton Undergraduate Research Initiative (FURI)&lt;/a> . The application allowed users to load a health and weather data set to display graphically on a map. The map displayed the counties for a country and changed the color of a county based on the number of health incidents. The user could change the the health condition (such as gastrointestinal problems) or the weather condition (such as temperature). Once the data fields were selected, the data was displayed on the map and the user could hover over a county to display a graph correlating the selected health condition to the selected weather condition.&lt;/p></description></item></channel></rss>